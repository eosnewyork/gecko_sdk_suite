/***************************************************************************//**
 * @file app_ci.h
 * @brief This is the header file for common RAIL test application commands.
 * @copyright Copyright 2015 Silicon Laboratories, Inc. www.silabs.com
 ******************************************************************************/

#ifndef __APP_CI_H__
#define __APP_CI_H__

/******************************************************************************
 * Application commands.
 *****************************************************************************/
// Base set of Command Interface commands
// <command> <args> <help text>
// u=uint8, v=uint16, w=uint32, s=int32, b=string, ?=Anything, *=0 or more of previous

#define APP_CI_COMMANDS                                                                                                                                                                                                                                                                                              \
  RAILCMD_SEPARATOR("Application Configuration")                                                                                                                                                                                                                                                                     \
  RAILCMD_ENTRY("setEventConfig", "ww", setEventConfig, "[mask events] Modify RAIL_ConfigEvents with the given mask and events")                                                                                                                                                                                     \
  RAILCMD_ENTRY("printDataRates", "", printDataRates, "Print the data rates of the current PHY")                                                                                                                                                                                                                     \
  RAILCMD_ENTRY("resetCounters", "", resetCounters, "Resets the Tx and Rx counters")                                                                                                                                                                                                                                 \
  RAILCMD_ENTRY("setPeripheralEnable", "u", setPeripheralEnable, "[enable] Enable(1) or Disable(0) LEDs and LCD peripherals")                                                                                                                                                                                        \
  RAILCMD_ENTRY("setNotifications", "u", setNotifications, "[enable] Enable(1) or Disable(0) status prints that happen asynchronously (rxPacket, txEnd, txError)")                                                                                                                                                   \
  RAILCMD_ENTRY("getLogLevels", "", getLogLevels, "Get whether notifications are set or peripherals are enabled")                                                                                                                                                                                                    \
  RAILCMD_ENTRY("getVersion", "", getVersion, "Get version information.")                                                                                                                                                                                                                                            \
  RAILCMD_ENTRY("getVersionVerbose", "", getVersionVerbose, "Get verbose version information.")                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("setPtiProtocol", "u", setPtiProtocol, "[protocol] Set PTI protocol for Network Analyzer (0=Custom 2=Thread 3=BLE 4=Connect 5=Zigbee 6=Z-Wave)")                                                                                                                                                     \
  RAILCMD_SEPARATOR("Receive and Transmit")                                                                                                                                                                                                                                                                          \
  RAILCMD_ENTRY("rx", "w", rx, "[enable] Enable(1) or Disable(0) receive mode")                                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("rxAt", "wbwbu*", rxAt, "[start mode end mode rxTransEndSched hardEnd] Configure scheduled receive.")                                                                                                                                                                                                \
  RAILCMD_ENTRY("setRxOptions", "w", setRxOptions, "[rxOptionsBitField] Configure receive options, based on RAIL_RX_OPTION defines")                                                                                                                                                                                 \
  RAILCMD_ENTRY("tx", "w", tx, "[n] Transmit n packets. If n is 0 transmit infinitely")                                                                                                                                                                                                                              \
  RAILCMD_ENTRY("txWithOptions", "w", txWithOptions, "[n] Transmit n packets with tx options. If n is 0 transmit infinitely")                                                                                                                                                                                        \
  RAILCMD_ENTRY("txAt", "wb*", txAtTime, "[time mode] Transmit a packet at the time and mode specified")                                                                                                                                                                                                             \
  RAILCMD_ENTRY("txAfterRx", "w", txAfterRx, "[time] Schedule a TX for a delay in us after each receive. 0 to disable")                                                                                                                                                                                              \
  RAILCMD_ENTRY("configTxOptions", "u", configTxOptions, "[txOptionsBitfield] Sets the bitmask to be used as the tx options. See #defines starting with \"RAIL_TX_OPTION_\" in rail_types.h")                                                                                                                        \
  RAILCMD_ENTRY("setFixedLength", "v", setFixedLength, "[fixedLength] Configure fixed length")                                                                                                                                                                                                                       \
  RAILCMD_ENTRY("setchannel", "v", setChannel, "[channel] Set the current radio channel")                                                                                                                                                                                                                            \
  RAILCMD_ENTRY("getchannel", "", getChannel, "Get the current radio channel")                                                                                                                                                                                                                                       \
  RAILCMD_ENTRY("setPower", "sb*", setPower, "[power raw] Set the current transmit power in deci dBm, or raw units if 'raw' is specified")                                                                                                                                                                           \
  RAILCMD_ENTRY("getPower", "", getPower, "Get the current transmit power in deci dBm")                                                                                                                                                                                                                              \
  RAILCMD_ENTRY("sweepTxPower", "", sweepTxPower, "Sweep power levels for the current PA and stream at each level.")                                                                                                                                                                                                 \
  RAILCMD_ENTRY("offsetLqi", "s", offsetLqi, "[offset] Add this offset value to the hardware's 8-bit hardware LQI value before being made available to the application.")                                                                                                                                            \
  RAILCMD_ENTRY("getRssi", "w*", getRssi, "[wait] Get RSSI in dBm if the receiver is turned on. Optionally specify whether or not to wait for a valid value in case it is initially invalid.")                                                                                                                       \
  RAILCMD_ENTRY("sweepPower", "ssw", sweepPower, "[lowPower] [hiPower] [period] Sweep power in square wave fashion. Specify power in deci dBm, period in microseconds.")                                                                                                                                             \
  RAILCMD_ENTRY("startAvgRssi", "wu*", startAvgRssi, "[averageTimeUs] [channel] Start AGC RSSI averaging")                                                                                                                                                                                                           \
  RAILCMD_ENTRY("getAvgRssi", "", getAvgRssi, "Get AGC RSSI averaging result.")                                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("setRssiOffset", "s", setRssiOffset, "Sets the RSSI offset in dBm.")                                                                                                                                                                                                                                 \
  RAILCMD_ENTRY("getRssiOffset", "", getRssiOffset, "Gets the RSSI offset.")                                                                                                                                                                                                                                         \
  RAILCMD_ENTRY("setTxTone", "w", setTxTone, "[enable] Enable(1) or Disable(0) a tone from the radio")                                                                                                                                                                                                               \
  RAILCMD_ENTRY("setTxStream", "w", setTxStream, "[enable] Enable(1) or Disable(0) a PN9 stream from the radio")                                                                                                                                                                                                     \
  RAILCMD_ENTRY("status", "", getStatus, "Print the current status counters")                                                                                                                                                                                                                                        \
  RAILCMD_ENTRY("fifoStatus", "", fifoStatus, "Print the current fifo related counters")                                                                                                                                                                                                                             \
  RAILCMD_ENTRY("setTxDelay", "w", setTxDelay, "[delay] Set the inter-packet delay in milliseconds for repeated Tx")                                                                                                                                                                                                 \
  RAILCMD_ENTRY("getTxDelay", "", getTxDelay, "Get the inter-packet delay in milliseconds for repeated Tx")                                                                                                                                                                                                          \
  RAILCMD_ENTRY("setTxPayload", "vu*", setTxPayload, "[offset byte0 byte1 ...] Set the packet bytes to be sent")                                                                                                                                                                                                     \
  RAILCMD_ENTRY("setTxPayloadQuiet", "vu*", setTxPayloadQuiet, "[offset byte0 byte1 ...] Functions like 'setTxPayload', but outputs less information")                                                                                                                                                               \
  RAILCMD_ENTRY("setTxLength", "v", setTxLength, "[length] Set the number of bytes to load into the FIFO before transmitting. Actual packet length may vary based on radio configuration")                                                                                                                           \
  RAILCMD_ENTRY("printTxPacket", "", printTxPacket, "Print the current Tx data and length")                                                                                                                                                                                                                          \
  RAILCMD_ENTRY("peek", "v*", peekRx, "[number of bytes] [offset] Peek at the start of receive buffer.")                                                                                                                                                                                                             \
  RAILCMD_ENTRY("getTime", "", getTime, "Get the current time from the RAIL timebase in microseconds")                                                                                                                                                                                                               \
  RAILCMD_ENTRY("setTime", "w", setTime, "Set the current time in the RAIL timebase in microseconds")                                                                                                                                                                                                                \
  RAILCMD_ENTRY("dataConfig", "bb", dataConfig, "[txMethod rxMethod] Choose between 'pkt' and 'fifo' data methods for RAIL Tx and Rx")                                                                                                                                                                               \
  RAILCMD_ENTRY("setRxFifo", "v", setRxFifo, "[length] Set the receive buffer's length, which is used in both packet mode and FIFO mode. The length cannot be set above RX_BUFFER_SIZE.")                                                                                                                            \
  RAILCMD_ENTRY("setTxFifoThreshold", "v", setTxFifoThreshold, "[txFifoThreshold] Set the Tx Fifo Almost Emtpy threshold")                                                                                                                                                                                           \
  RAILCMD_ENTRY("setRxFifoThreshold", "v", setRxFifoThreshold, "[rxFifoThreshold] Set the Rx Fifo Almost Emtpy threshold")                                                                                                                                                                                           \
  RAILCMD_ENTRY("fifoModeTestOptions", "bb", fifoModeTestOptions, "[txFifoManual rxFifoManual] Manual control over RAILTEST fifo actions")                                                                                                                                                                           \
  RAILCMD_ENTRY("rxFifoManualRead", "bvb*", rxFifoManualRead, "[appendedInfo bytesToRead printTiming] Read bytes out of receive fifo and print")                                                                                                                                                                     \
  RAILCMD_ENTRY("txFifoManualLoad", "", txFifoManualLoad, "Will attempt to load data into the fifo if there is space")                                                                                                                                                                                               \
  RAILCMD_ENTRY("fifoReset", "bb", fifoReset, "[tx rx] Reset the transmit or receive fifo")                                                                                                                                                                                                                          \
  RAILCMD_ENTRY("abortRxPacket", "w", abortRxPacket, "[abortOffset] Delay after sync word before idling radio.")                                                                                                                                                                                                     \
  RAILCMD_ENTRY("printTxAcks", "w", printTxAcks, "[printTxAcks] Enable printing of tx ack packets as they happen.")                                                                                                                                                                                                  \
  RAILCMD_ENTRY("configRxChannelHopping", "w*", configRxChannelHopping, "[(channel mode parameter delay)...] Configure RX Channel Hopping to hop in the sequence provided, for the given RAIL_RxChannelHoppingMode_t mode, parameter, and interchannel delay. One mode and parameter must be provided per channel.") \
  RAILCMD_ENTRY("enableRxChannelHopping", "uu*", enableRxChannelHopping, "[enable (reset)] Enable/disable rx channel hopping. The channel hopping will start again from the first member of the sequence is reset is true.")                                                                                         \
  RAILCMD_ENTRY("setTxAltPreambleLen", "w", setTxAltPreambleLen, "[length] Set an alternate preable length for transmit, which can be enabled in txOptions.")                                                                                                                                                        \
  RAILCMD_ENTRY("printRxErrors", "w", printRxErrors, "[enable] Enable (1) or Disable (0) printing of Rx error packets")                                                                                                                                                                                              \
  RAILCMD_SEPARATOR("Energy Modes and RF Sense")                                                                                                                                                                                                                                                                     \
  RAILCMD_ENTRY("sleep", "bw*", sleep, "[EM# [RfSenseUs RfBand]] Sleep in EM# with RFSenseUs on RfBand (0=none,1=2.4GHz,2=SubGHz,3=both) (and UART input)")                                                                                                                                                          \
  RAILCMD_ENTRY("rfsense", "ww", rfSense, "[RfSenseUs RfBand] Start RfSensing with RSenseUs on RfBand")                                                                                                                                                                                                              \
  RAILCMD_SEPARATOR("Address Filtering")                                                                                                                                                                                                                                                                             \
  RAILCMD_ENTRY("configAddressFilter", "wu*", setAddressFilterConfig, "[matchTable offset0 size0 offset1 size1] Configure the addresss filter.")                                                                                                                                                                     \
  RAILCMD_ENTRY("setAddressFiltering", "u", setAddressFilter, "[enable] Enable(1) or Disable(0) address filtering.")                                                                                                                                                                                                 \
  RAILCMD_ENTRY("getAddressFiltering", "", getAddressFilter, "Print the current state of address filtering.")                                                                                                                                                                                                        \
  RAILCMD_ENTRY("printAddresses", "", printAddresses, "Print the current address filtering addresses.")                                                                                                                                                                                                              \
  RAILCMD_ENTRY("setAddress", "uuu*", setAddress, "[field index value...] Set the address value at (field, index) to value.")                                                                                                                                                                                        \
  RAILCMD_ENTRY("setAddressEnable", "uuu", enableAddress, "[field index enable] Enable address filtering for the given address.")                                                                                                                                                                                    \
  RAILCMD_SEPARATOR("Error Rate Testing")                                                                                                                                                                                                                                                                            \
  RAILCMD_ENTRY("perRx", "ww", startPerMode, "[packets delayUs] Start a Packet Error Rate test. 'perRx 0 0' will disable ongoing test.")                                                                                                                                                                             \
  RAILCMD_ENTRY("perStatus", "", getPerStats, "Output the results of the PER test. Also see 'status' command")                                                                                                                                                                                                       \
  RAILCMD_ENTRY("setBerConfig", "w", berConfigSet, "[number bytes] Set number of bytes to receive in BER mode; 536870911 = max number of bytes to test; 0 = set max number of bytes to test")                                                                                                                        \
  RAILCMD_ENTRY("berRx", "w", berRx, "[enable] Enable(1) or Disable(0) BER receive mode")                                                                                                                                                                                                                            \
  RAILCMD_ENTRY("berStatus", "", berStatusGet, "Get status of last BER test or of current running test; status information is reset for commands setBerConfig and berRx enable")                                                                                                                                     \
  RAILCMD_SEPARATOR("Listen Before Talk (LBT)")                                                                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("setLbtMode", "b*", setLbtMode, "[modeStr] Set LBT mode off, csma, lbt")                                                                                                                                                                                                                             \
  RAILCMD_ENTRY("getLbtParams", "", getLbtParams, "Get the current LBT parameters")                                                                                                                                                                                                                                  \
  RAILCMD_ENTRY("setLbtParams", "uuusvvw", setLbtParams, "[minBo maxBo tries thresh backoff duration timeout] Set LBT parameters")                                                                                                                                                                                   \
  RAILCMD_SEPARATOR("802.15.4 Mode")                                                                                                                                                                                                                                                                                 \
  RAILCMD_ENTRY("enable802154", "bvvv", ieee802154Enable, "[defaultState idleTime turnaroundTime ackTimeout] Enable 802.15.4 mode")                                                                                                                                                                                  \
  RAILCMD_ENTRY("config2p4GHz802154", "b*", config2p4Ghz802154, "[antDiv] Configure the radio for 2.4 GHz 802.15.4. This should be called in addition to 'enable802154'.")                                                                                                                                           \
  RAILCMD_ENTRY("config863MHz802154", "", config863Mhz802154, "Configure the radio for 863 MHz 802.15.4 GB868. This should be called in addition to 'enable802154'.")                                                                                                                                                \
  RAILCMD_ENTRY("config915MHz802154", "", config915Mhz802154, "Configure the radio for 915 MHz 802.15.4 GB868. This should be called in addition to 'enable802154'.")                                                                                                                                                \
  RAILCMD_ENTRY("acceptFrames", "uuuu", ieee802154AcceptFrames, "[command ack data beacon] Enable(1) or Disable(0) 802.15.4 frame acceptance. Default settings for 802.15.4 are 1 0 1 1.")                                                                                                                           \
  RAILCMD_ENTRY("setPromiscuousMode", "u", ieee802154SetPromiscuousMode, "[enable] Enable(1) or Disable(0) promiscuous mode")                                                                                                                                                                                        \
  RAILCMD_ENTRY("setPanCoordinator", "u", ieee802154SetPanCoordinator, "[enable] Enable(1) or Disable(0) the node acting as a PAN coordinator")                                                                                                                                                                      \
  RAILCMD_ENTRY("setPanId802154", "vu*", ieee802154SetPanId, "[panId index] Set the PAN ID for the given index. Index defaults to 0 if not given")                                                                                                                                                                   \
  RAILCMD_ENTRY("setShortAddr802154", "vu*", ieee802154SetShortAddress, "[shortAddr index] Set the short address(es) for the given index. Index defaults to 0 if not given")                                                                                                                                         \
  RAILCMD_ENTRY("setLongAddr802154", "uuuuuuuuu*", ieee802154SetLongAddress, "[longAddr_0 ... longAddr_7 index] Set the long address for the given index. Index defaults to 0 if not given")                                                                                                                         \
  RAILCMD_ENTRY("setAddresses802154", "vvb*", ieee802154SetAddresses, "[panId0 shortAddr0 longAddr0 panId1 ... ] Set all 802.15.4 address information.")                                                                                                                                                             \
  RAILCMD_SEPARATOR("BLE Mode")                                                                                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("setBleMode", "u", bleEnable, "[enable] Set BLE mode to enabled or disabled")                                                                                                                                                                                                                        \
  RAILCMD_ENTRY("getBleMode", "", bleStatus, "Get the current BLE mode")                                                                                                                                                                                                                                             \
  RAILCMD_ENTRY("setBleChannelParams", "uw*", bleSetChannelParams, "[logicalChannel accessAddr crcInit disableWhiten] Configure channel parameters related to BLE")                                                                                                                                                  \
  RAILCMD_ENTRY("setBleAdvertising", "u", bleAdvertisingConfig, "[advChannel] Configure for BLE advertising on channel 37, 38, or 39")                                                                                                                                                                               \
  RAILCMD_ENTRY("setBle1Mbps", "u*", bleSet1MbpsPhy, "[isViterbi] Switch to the 1Mbps BLE PHY")                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("setBle2Mbps", "u*", bleSet2MbpsPhy, "[isViterbi] Switch to the 2Mbps BLE PHY")                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("setBleCoding", "u", bleSetCoding, "[coding] Switch to the given RAIL_BLE_Coding_t value")                                                                                                                                                                                                           \
  RAILCMD_SEPARATOR("Z-Wave Mode")                                                                                                                                                                                                                                                                                   \
  RAILCMD_ENTRY("setZWaveMode", "u*", zwaveEnable, "[enable [options]] Set Z-Wave mode to enabled or disabled")                                                                                                                                                                                                      \
  RAILCMD_ENTRY("getZWaveMode", "", zwaveStatus, "Get the current Z-Wave mode")                                                                                                                                                                                                                                      \
  RAILCMD_ENTRY("setZWaveRegion", "u", zwaveSetRegion, "[region] Set Z-Wave region")                                                                                                                                                                                                                                 \
  RAILCMD_ENTRY("getZWaveRegion", "", zwaveGetRegion, "Get the current Z-Wave region")                                                                                                                                                                                                                               \
  RAILCMD_ENTRY("listZWaveRegions", "", zwaveListRegions, "List supported Z-Wave regions")                                                                                                                                                                                                                           \
  RAILCMD_ENTRY("getZWaveBaudRate", "", zwaveGetBaudRate, "Get the baudrate of the current Z-Wave channel")                                                                                                                                                                                                          \
  RAILCMD_ENTRY("setZWaveNodeId", "u", zwaveSetNodeId, "[nodeId] Sets Z-Wave NodeId")                                                                                                                                                                                                                                \
  RAILCMD_ENTRY("setZWaveHomeId", "wu", zwaveSetHomeId, "[homeId hash] Sets Z-Wave HomeId and its hash")                                                                                                                                                                                                             \
  RAILCMD_SEPARATOR("RAIL Timer")                                                                                                                                                                                                                                                                                    \
  RAILCMD_ENTRY("setTimer", "wb", setTimer, "[timeout mode] Set the RAIL timer timeout. You can use either an absolute (abs) or relative (rel) timer mode.")                                                                                                                                                         \
  RAILCMD_ENTRY("timerCancel", "", timerCancel, "Cancel the RAIL timer if it's active.")                                                                                                                                                                                                                             \
  RAILCMD_ENTRY("printTimerStats", "", printTimerStats, "Print current timer configuration.")                                                                                                                                                                                                                        \
  RAILCMD_ENTRY("enableMultiTimer", "u", enableMultiTimer, "[enable] Enable (1) or disable (0) the multiTimer API for use. By default the multiTimer is disabled for single protocol RAIL and enabled for multiprotocol RAIL.")                                                                                      \
  RAILCMD_ENTRY("setMultiTimer", "uwb", setMultiTimer, "[timer timeout mode] Set a specific timer's timeout, starting with timer 0. You can use either an absolute (abs) or relative (rel) timer mode.")                                                                                                             \
  RAILCMD_ENTRY("multiTimerCancel", "u", multiTimerCancel, "[timer] Cancel a specific timer if it's active, starting with timer 0.")                                                                                                                                                                                 \
  RAILCMD_ENTRY("printMultiTimerStats", "u", printMultiTimerStats, "[timer] Print a specific timer's configuration, starting with timer 0.")                                                                                                                                                                         \
  RAILCMD_SEPARATOR("Auto Acking")                                                                                                                                                                                                                                                                                   \
  RAILCMD_ENTRY("autoAckConfig", "bvvv", autoAckConfig, "[defaultState idleTime turnaroundTime ackTimeout] Configure and enable auto ack functionality in RAIL. ")                                                                                                                                                   \
  RAILCMD_ENTRY("autoAckDisable", "", autoAckDisable, "Disable auto ack. Use autoAckConfig to reenable.")                                                                                                                                                                                                            \
  RAILCMD_ENTRY("setAckPayload", "vu*", setAckPayload, "[offset byte0 byte1 ...] Set the ack bytes to be sent.")                                                                                                                                                                                                     \
  RAILCMD_ENTRY("setAckLength", "v", setAckLength, "[length] Set the number of bytes to transmit for ack payloads")                                                                                                                                                                                                  \
  RAILCMD_ENTRY("printAckPacket", "", printAckPacket, "Print the current ack data and length")                                                                                                                                                                                                                       \
  RAILCMD_ENTRY("getAutoAck", "", getAutoAck, "Print the current state of auto acking.")                                                                                                                                                                                                                             \
  RAILCMD_ENTRY("autoAckPause", "uu", autoAckPause, "[RxPause TxPause] Pause(1) or Resume(0) Auto Acking")                                                                                                                                                                                                           \
  RAILCMD_ENTRY("setTxAckOptions", "uu", setTxAckOptions, "[cancelAck useTxBuf] Enable(1) or Disable(0) feature for one receive")                                                                                                                                                                                    \
  RAILCMD_SEPARATOR("GPIO Functions")                                                                                                                                                                                                                                                                                \
  RAILCMD_ENTRY("setGpioOutPin", "buu", setGpioOutPin, "[port pin state] Set a GPIO pin's data out bit.")                                                                                                                                                                                                            \
  RAILCMD_SEPARATOR("Diagnostic and Test")                                                                                                                                                                                                                                                                           \
  RAILCMD_ENTRY("getConfigIndex", "", getConfigIndex, "Get the index of the current radio configuration selected for use. See the entries in *channelConfigs[]. Start with index 0.")                                                                                                                                \
  RAILCMD_ENTRY("setConfigIndex", "u", setConfigIndex, "[index] Set the index of the current radio configuration selected for use, and associate this new configuration to the current railHandle. See the entries in *channelConfigs[]. Start with index 0.")                                                       \
  RAILCMD_ENTRY("getmemw", "ww*", getMemWord, "[address count] Read count 32bit words starting at address")                                                                                                                                                                                                          \
  RAILCMD_ENTRY("setmemw", "ww*", setMemWord, "[address value...] Write as many 32bit values as specified starting at address")                                                                                                                                                                                      \
  RAILCMD_ENTRY("setCtune", "v", setCtune, "[ctune] Set the value of CTUNE in the CMU->HFXOSTEADYSTATECTRL register")                                                                                                                                                                                                \
  RAILCMD_ENTRY("getCtune", "", getCtune, "Get the value of CTUNE in the CMU->HFXOSTEADYSTATECTRL register")                                                                                                                                                                                                         \
  RAILCMD_ENTRY("setPaCtune", "uu", setPaCtune, "[txPaCtune] [rxPaCtune] Set the value of PACTUNE for TX and RX mode")                                                                                                                                                                                               \
  RAILCMD_ENTRY("enablePaCal", "u", enablePaCal, "[enable] Enable(1) or Disable(0) PA power calibration")                                                                                                                                                                                                            \
  RAILCMD_ENTRY("setDebugSignal", "?", setDebugSignal, "Configure chip specific debug output. Use 'setDebugSignal help' for more details.")                                                                                                                                                                          \
  RAILCMD_ENTRY("setDebugMode", "w", setDebugMode, "[mode] 1 = Frequency Override. 0 = Disable debug mode")                                                                                                                                                                                                          \
  RAILCMD_ENTRY("freqOverride", "w", setFrequency, "[freq] Change to freq specified in Hz. Requires debug mode to be enabled. Only small frequency deviations from the current configuration are supported.")                                                                                                        \
  RAILCMD_ENTRY("directMode", "u", setDirectMode, "[enable] Enable(1) or Disable(0) direct mode")                                                                                                                                                                                                                    \
  RAILCMD_ENTRY("directTx", "u", setDirectTx, "[enable] Enable(1) or Disable(0) TX in direct mode")                                                                                                                                                                                                                  \
  RAILCMD_ENTRY("txCancel", "s", txCancel, "[delay] Set the time in microseconds after which we should cancel a tx (a negative value disables this)")                                                                                                                                                                \
  RAILCMD_ENTRY("getRandom", "vu*", getRandom, "[len hidden] Get len bytes of random data from the radio. Only print them to the screen if hidden is 0 (default).")                                                                                                                                                  \
  RAILCMD_ENTRY("setTxUnderflow", "w", setTxUnderflow, "[enable] Enable(1) or Disable(0) TX underflows")                                                                                                                                                                                                             \
  RAILCMD_ENTRY("setRxOverflow", "w*", setRxOverflow, "[enable delayUs] Enable(1) or Disable(0) RX overflows. The overflow will be caused by hanging in the interrupt handler for delayUs")                                                                                                                          \
  RAILCMD_ENTRY("setCalibrations", "w", setCalibrations, "[enable] Enable(1) or Disable(0) RAIL calibrations")                                                                                                                                                                                                       \
  RAILCMD_ENTRY("setTxTransitions", "bb", setTxTransitions, "[txSuccess txError] Set each RAIL TX state transition value to r(x) or i(dle)")                                                                                                                                                                         \
  RAILCMD_ENTRY("setRxTransitions", "bb", setRxTransitions, "[rxSuccess rxError] Set each RAIL RX state transition value to t(x), r(x), or i(dle).")                                                                                                                                                                 \
  RAILCMD_ENTRY("setTimings", "vvvv*", setTimings, "[idleToRx txToRx idleToTx rxToTx rxSearch txToRxSearch] Set RAIL state transition timings in microseconds")                                                                                                                                                      \
  RAILCMD_ENTRY("forceAssert", "w", forceAssert, "[errorCode] Force a RAIL assert with the given error code.")                                                                                                                                                                                                       \
  RAILCMD_ENTRY("printEvents", "w", configPrintEvents, "[printEvents] Enable printing of RAIL events in chronological order.")                                                                                                                                                                                       \
  RAILCMD_ENTRY("getAppMode", "", getAppMode, "Print the current app mode of RAILTEST. Values printed are those to be found in AppMode_t.")                                                                                                                                                                          \
  RAILCMD_ENTRY("getRadioState", "", getRadioState, "Get the RAIL radio state. Values returned correspond to RAIL_RadioState_t.")                                                                                                                                                                                    \
  RAILCMD_ENTRY("verifyRadio", "wuuu", verifyRadio, "[durationUs restart override callback] Verify radio memory contents and return after duration in microseconds. Restart (1) or resume (0) from last run.")                                                                                                       \
  RAILCMD_ENTRY("enterScript", "", enterScript, "Enter script entry mode. End script entry with endScript ('endScript' command not in app_ci.h. Only available during enterScript mode).")                                                                                                                           \
  RAILCMD_ENTRY("printScript", "", printScript, "Print the script entered via enterScript.")                                                                                                                                                                                                                         \
  RAILCMD_ENTRY("startScript", "", startScript, "Run the script entered via enterScript.")                                                                                                                                                                                                                           \
  RAILCMD_ENTRY("wait", "wb*", wait, "[time (mode)] Suspend processing of any input until time into the future. Optionally specify whether the time is relative (rel) (default) or absolute (abs) Intended for use in scripted mode.")                                                                               \
  RAILCMD_ENTRY("reset", "", resetChip, "Perform a reboot of the chip")                                                                                                                                                                                                                                              \
  // Please keep this line below last RAILCMD_ENTRY

/******************************************************************************
 * Externed Prototypes
 *****************************************************************************/
#define RAILCMD_ENTRY(command, args, callback, helpStr) \
  extern void callback(int argc, char **argv);
#define RAILCMD_SEPARATOR(string) /* no-op */
APP_CI_COMMANDS
#undef  RAILCMD_ENTRY
#undef  RAILCMD_SEPARATOR

#endif // __APP_CI_H__
